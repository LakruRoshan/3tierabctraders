<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAiP4f57TtxYDE9+QAAAAASUVORK5CYII=
</value>
  </data>
</root>